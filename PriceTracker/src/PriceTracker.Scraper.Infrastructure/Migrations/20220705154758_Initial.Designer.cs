// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PriceTracker.Scraper.Infrastructure.Persistence;

#nullable disable

namespace PriceTracker.Scraper.Infrastructure.Migrations
{
    [DbContext(typeof(ScraperApplicationDbContext))]
    [Migration("20220705154758_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("PriceTracker.Domain.Entities.Availability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Availabilities");
                });

            modelBuilder.Entity("PriceTracker.Domain.Entities.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Discount")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("PriceTracker.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsTracked")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PriceTracker.Domain.Entities.Availability", b =>
                {
                    b.HasOne("PriceTracker.Domain.Entities.Product", null)
                        .WithMany("AvailabilityHistory")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("PriceTracker.Domain.Entities.Price", b =>
                {
                    b.HasOne("PriceTracker.Domain.Entities.Product", null)
                        .WithMany("PriceHistory")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("PriceTracker.Domain.Entities.Product", b =>
                {
                    b.OwnsOne("PriceTracker.Domain.ValueObjects.GeneralProductInformation", "GeneralInformation", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<int>("Shop")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Url")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("GeneralInformation")
                        .IsRequired();
                });

            modelBuilder.Entity("PriceTracker.Domain.Entities.Product", b =>
                {
                    b.Navigation("AvailabilityHistory");

                    b.Navigation("PriceHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
